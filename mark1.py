""""

# Time management
# Εισαγωγή tkinter

# Μενού εισαγωγής
    # 1 Συνάρτηση: Εισαγωγή
        # α) Υποχρεώσεις ή β) Δραστηριότητες
        # Διάρκεια δραστηριότητας , δεν μπορεί να υπερβαίνει τον συνολικό ελεύθερο χρόνο (<= Ελεύθερος χρόνος) , τις 168 ώρες της εβδομάδας και να είναι αρνητική ή χαρακτήρας.
        # Βαθμός σημαντικότητας (1-10)
        # Συνολικός ελεύθερος χρόνος μέσα στην εβδομάδα, η εβδομάδα έχει 168 ώρες (<=168)

    # 2 Συνάρτηση: Εμφάνιση όλων των δραστηριοτήτων


    # 3 Συνάρτηση: Τροποποίηση
        # Αλλαγή διάρκειας δραστηριότητας
        # Αλλαγή βαθμού σημαντικότητας
        # ΑΝ υπάρξει τροποίηση στην διάρκεια τότε 
            # Έλεγχος επάρκειας συνολικού ελεύθερου χρόνου
            # Επανυπολογισμός του συνολικού ελεύθερου χρόνου



    # 4 Συνάρτηση: Διαγραφή
        # Επιλογή δραστηριότητας προς διαγραφή 
        # Αν υπάρχει:
            # Διαγραφή και επανυπολογισμός του συνολικού ελεύθερου χρόνου.


    # 5 Συνάρτηση: Έξοδος
        # Αν επιλογή  = 4 τότε: Έξοδος.

# Έξοδος

Το κανω exe:
pyinstaller main.py --onefile -w(για να μην εχει το terminal οταν εχω gui)

TODO: Συναρτήσεις για εισαγωγές , Επιπλέον επιλογή στο κεντρικό μενού για προβολή του διαθέσιμου χρόνου
20/03/2025:
- Προσθήκη παραμέτρου x στην epilogi() για κλήση με μεταβλητό άνω όριο
- Προσθήκη της terminate, ελέγχει αν ο συνολικός ελεύθερος χρόνος μηδενίζεται συνέπεια των διαδοχικών αφαιρέσεων απο τις εισαγωγές δραστηριοτήτων. Αν terminate = True τότε δεν μπορώ να μπώ στην διαδικασία εισαγωγής νέας συνάρτησης.
- Προσθήκη συναρτήσεων για:
    1) Εισαγωγή ονόματος name()
    2) Εισαγωγή ελεύθερου χρόνου eleutheros_xronos()
    3) Προβολή του ελεύθερου χρόνου display_FreeTime()
    4) Εισαγωγή βαθμού σημαντικότητας importance()
    5) Εισαγωγή διάρκειας duration(), ταυτόχρονα επαναπροσδιορίζει τον ελεύθερο χρόνο.
- Αφαίρεση επιλογής για υποχρέωση ή χόμπι (έγιναν σχόλια σε περίπτωση που τα χρησιμοποιήσουμε τελικά)
- Προσθήκη επιλογής απο το κεντρικό μενου για:
    1) Προβολή διαθέσιμου χρονου
    2) Απευθείας εισαγωγή ελεύθερου χρόνου χωρίς να χρειάζεται εισαγωγή ολόκληρης δραστηριότητας


TODO: Συνάρτηση modify | 




"""

# Αρχικοποιήσεις
weekly_hours = 168
total_hours = 0 

# Λίστες απο dictionaries για κάθε τύπο δραστηριότητας.
activities = []
#ypoxrewseis = []
#hobby = []




# Μενού
def display_menu():
    print("\n","-" * 10 , "Time Management" , "-" * 10 , "\n")
    print("1. Εισαγωγή νέας δραστηριότητας")
    print("2. Εμφάνιση όλων των δραστηριοτήτων")
    print("3. Τροποποίηση δραστηριοτήτων")
    print("4. Διαγραφη δραστηριότητας")
    print("5. Εμφάνιση διαθέσιμου ελεύθερου χρόνου")
    print("6. Προσθήκη διαθέσιμου ελεύθερου χρόνου")
    print("7. Έξοδος")

# Eπιλογή λειτουργίας
def epilogi(x):
    while True:
        try:
            epilogi = input("Επέλεξε μια απο τις παραπάνω λειτουργείες: ").strip()
            epilogi = int(epilogi)
            if 1<= epilogi <= x:
                return epilogi
                break
            else:
                print ("Mή έγκυρη τιμή.")
        except ValueError:
            print ("Mή έγκυρη τιμή.")

# Συνάρτηση εισαγωγής ονόματος
def name():
    """Εισάγει / τροποποιεί το όνομα της δραστηριότητας"""

    # Εισαγωγή ονόματος, αφαιρώ τα κενά space πρίν και μετά το όνομα. 
    onoma = input("Δώστε το όνομα της δραστηριότητας: ").strip()
            
    """"
        Έλεγχος ονόματος, αν δωθεί το κενό τότε το διαγράφω με την strip επομένως onoma = False και μπαίνω στην επανάληψη
        ή αν κανένα απο τα στοιχεία του ονόματος δεν είναι χαρακτήρας.
    """
    while not onoma or not any(char.isalpha() for char in onoma):
        onoma = input("Το όνομα της δραστηριότητας δεν μπορεί να είναι κενό ή αριθμός, παρακαλώ επανεισάγετε το όνομα: ").strip()
    return onoma

# Εισαγωγή συνολικού ελεύθερου χρόνου
def eleutheros_xronos():
    """Εισάγει τον ελεύθερο χρόνο"""
    while True:
        try:
            total_hours = input("Παρακαλώ εισάγετε τις συνολικές ώρες που έχετε διαθέσιμες για αυτήν την εβδομάδα: ").strip()
            total_hours = float(total_hours)
            if total_hours and 0 <= total_hours <= 168:
                return total_hours
            else:
                print("Οι συνολικές διαθέσιμές ώρες δεν μπορούν να είναι αρνητικός αριθμός ή περισσότερες από τις 168 ώρες της εβδομάδας.")
        except ValueError:
            print ("Μή έγκυρη είσοδος. Παρακαλώ εισάγετε τον αριθμό των διαθέσιμων ωρών.")

# Εμφάνιση του συνολικού ελεύθερου χρόνου
def display_FreeTime(x):
    """Προβάλει τον διαθέσιμο ελεύθερο χρόνο"""
    if x > 0:
        print("\nΟ συνολικός ελεύθερος χρόνος σας για αυτή την εβδομάδα είναι: ", x, "ώρες.")
    else:
        print("\nΔεν έχετε διαθέσιμό ελεύθερο χρόνο, παρακαλώ τροποποιήστε ή διαγράψτε κάποια δραστηριότητα για να ελευθερώσετε χρόνο ή πατήστε 6 για να προσθέσετε ελεύθερο χρόνο")

# Συνάρτηση εισαγωγής διάρκειας δραστηριότητας
def duration(total_hours):
    
    # Εισαγωγή διάρκειας με έλεγχο ορθότητας (Δεν μπορεί να υπερβαίνει τον συνολικό ελεύθερο χρόνο, τις 168 ώρες της εβδομάδας και να είναι αρνητική ή χαρακτήρας).
    while True:
        try:
            diarkeia = input ("Δώστε την διάρκεια της δραστηριότητας σε ώρες: ").strip()
            diarkeia = float(diarkeia)
            if diarkeia and 0 < diarkeia <= total_hours and diarkeia + total_hours <= weekly_hours:
                total_hours -= diarkeia
                return diarkeia, total_hours
            else:
                print(f"Η διάρκεια πρέπει να είναι θετικός αριθμός και δεν μπορεί να ξεπερνάει τις {total_hours} διαθέσιμες ώρες ή τις 168 ώρες της εβδομάδας.")
        except ValueError:
            print("Μή έγκυρη είσοδος, παρακαλώ εισάγετε έναν αριθμό ωρών.")

# Συνάρτηση εισαγωγής βαθμού σημαντικότητας
def importance():
    while True:
        try:    
            grade = input("Δώστε τον βαθμό σημαντικότητας (1-10): ").strip()
            grade = int(grade)
            if grade and 1 <= grade <= 10:
                return grade
            else:
                print("Παρακαλώ δώστε έναν βαθμό απο το 1 εώς το 10.")
        except ValueError:
            print("Μή έγκυρη τιμή.")

# Προσθήκη δραστηριότητας
def add_activity(total_hours , activities):
    
    """ Εισάγει νέα δραστηριότητα ελέγχοντας πρώτα αν δεν έχει μηδενιστεί ο ελεύθερος χρόνος (μέσω της terminate).
        Καλεί τις συναρτήσεις εισαγωγής: 
        name() για: όνομα, 
        duration() για: διάρκεια, 
        eleutheros_xronos() για: ελεύθερο χρόνο(αν δεν έχει γίνει εισαγωγή ελεύθερου χρόνου πιο πριν),
        importance() για: βαθμό σημαντικότητας.
        Στην συνέχεια δημιουργεί dictionary για κάθε δραστηριότητα και το αποθηκεύει στην λίστα activities.
    """
    
    global terminate
    if total_hours > 0:
        terminate=False
        
    if terminate == False: # Αν έχω διαθέσιμο ελεύθερο χρόνο μπορώ να εισάγω νέα δραστηριότητα
        while True:
        
        # Eπιλογή τύπου δραστηριότητας, 1 για Υποχρέωση ή 2 για Χόμπι.
        #    while True:
        #        try:
        #            choice = int(input(("Πληκτρολογείστε 1 για Υποχρέωση ή 2 για Χόμπι: ")))
        #            if choice in [1,2]:
        #                break
        #            print("Η επιλογή δεν υπάρχει. Παρακαλώ προσπαθήστε ξανά.")
        #        except ValueError:
        #            print("Μη έγκυρη είσοδος.")
                    
        
            
                

            onoma = name()
            if any(activity["Δραστηριότητα"] == onoma for activity in activities):
                print("\nΗ δραστηριότητα υπάρχει ήδη.")
                break
        
        #Εισαγωγή διάρκειας δραστηριότητας

            # αν οι συνολικές διαθέσιμες ώρες είναι 0 , εισαγωγή των ωρών πρώτα
            if total_hours == 0:
                total_hours = eleutheros_xronos()
           
            #Εισαγωγή διάρκειας δραστηριότητας
            diarkeia, total_hours = duration(total_hours) # Δέχεται το total_hours για τον εκ νέου υπολογισμό του και το στέλνει πίσω μαζί με την diarkeia με το return 
            
        # Eισαγωγή σημαντικότητας
            grade = importance()
        
        
        # Αν μηδενίστηκαν οι ώρες με την είσοδο της τελευταίας δραστηριότητας:
            if total_hours == 0: # Αν μηδενιστούν οι ελεύθερες ώρες τότε το terminate γινεταί True και δεν αφήνει να μπούμε εκ νέου στην λειτουργία προσθήκης δραστηριότητας
                    print("\nΜε την προσθήκη αυτής της δραστηριότητας έχει εξαντληθεί ο διαθέσιμος ελεύθερος χρόνος σας!")
                    terminate = True 
        
        
        # Εισαγωγή του στοιχείου στην λίστα με τα dictionaries
            # Αποθήκευση ως dictionary με όνομα activity
            activity = {
                "Δραστηριότητα" : onoma,
                "Διάρκεια" : diarkeia,
                "Σημαντικότητα" : grade
            }

            # Προσθήκη του dictionary στην λίστα 
            activities.append(activity)
            
            return total_hours 
    else:
        print("\nΔεν έχετε διαθέσιμό ελεύθερο χρόνο, παρακαλώ τροποποιήστε ή διαγράψτε κάποια δραστηριότητα ή επιλέξτε να προσθέσετε ελεύθερο χρόνο")   
        return total_hours #ΚΑΙ ΓΑΜΩ ΤΑ BUG!!!!!!!!!!!!!!!!!!!!! 
    
    """Αν μπεί με 0 για πρώτη φορά τότε τρέχει κανονικά την loop αφου το terminate εχει αρχικοποιηθεί σε False. Όμως το terminate γίνεται True.
        Αν μπεί για 2η συνεχόμενη φορά με 0 μέσω της επιλογής 1 απο το μενού τότε δεν επέστρεφε καμιά τιμή"""

# Εμφάνιση όλων των αποθηκευμένων δραστηριοτήτων
def display_activities(activities):
    """Προβάλει τις αποθηκευμένες δραστηριότητες ή αν δεν υπάρχουν, ενημερώνει με κατάλληλο μήνυμα."""
    if not activities:
        print("\nΔεν βρέθηκαν δραστηριότητες.\n")
    else:
        print("\nΟι δραστηριότητες που έχετε να κάνετε αυτή την εβδομάδα είναι: \n")
        for drastiriotita in activities:
            print (f"{drastiriotita['Δραστηριότητα']} : Διάρκεια: {drastiriotita['Διάρκεια']} ώρες | Βαθμός σημαντικότητας: {drastiriotita['Σημαντικότητα']}")

# Τροποποίηση
def modify(activities):
    
    if not activities:
        print ("Δεν υπάρχουν δραστηριότητες για τροποποίηση.")
        return
    
    # Εμφάνιση και επιλογή διαθέσιμων δραστηριοτήτων
    print ("\nΕπιλέξτε μία απο τις διαθέσιμες δραστηριότητες για τροποποίηση: \n")
    for activity in activities:
        print (f"{activity['Δραστηριότητα']}")
    
    # Έξωτερικός βρόγχος 
    while True:
        
        # Επιλογή του χρήστη 
        choice = input().strip()

        # Αν η επιλογή είναι έγκυρη  
        if any(activity["Δραστηριότητα"] == choice for activity in activities):
            
            print("\nΔυνατότητες τροποποίησης: \n")
            print("1. Τροποποίηση ονόματος δραστηριότητας")
            print("2. Τροποποίηση διάρκειας δραστηριότητας")
            print("3. Τροποποίηση βαθμού σημαντικότητας δραστηριότητας")
            print("4. Ακύρωση\n")
            
            
            dynatotita = epilogi(x=4)
            
            if dynatotita == 1:
                onoma = name()
                if any(activity["Δραστηριότητα"] == onoma for activity in activities):
                    print("\nΗ δραστηριότητα υπάρχει ήδη.")
                    break
                else:
                    activity["Δραστηριότητα"] = onoma
                    print("Το όνομα της δραστηριότητας άλλαξε σε: ", activity["Δραστηριότητα"])
                    return
            elif dynatotita == 2:
                pass

            break    
        # Αν η επιλογή δεν είναι έγκυρη      
        else:
            print ("\nH δραστηριότητα που επιλέξατε δεν υπάρχει, παρακαλώ επιλέξτε μια από τις παρακάτω: \n")
            for activity in activities:
                print (f"{activity['Δραστηριότητα']}")
        


            








    


# Κυρίως πρόγραμμα
def main():
    global total_hours, terminate
    terminate = False
    while True:

        display_menu()
        leitourgia = epilogi(x=7)
        if leitourgia == 1:
            total_hours = add_activity(total_hours , activities)
        elif leitourgia == 2:
            display_activities(activities)    
        elif leitourgia == 3:
            modify(activities)
        elif leitourgia == 4:
            pass
        elif leitourgia == 5:
            if activities:
                display_FreeTime(total_hours)
            else:
                print("\nΔεν έχετε εισάγει τον διαθέσιμο ελεύθερο χρόνο σας. Παρακαλώ πατήστε το 6 για προσθήκη ελεύθερου χρόνου.")
        elif leitourgia == 6:
            total_hours = eleutheros_xronos()
        else:
            print("\nΈξοδος απο το πρόγραμμα.\n")
            break

main()